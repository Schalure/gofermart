// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Schalure/gofermart/internal/server (interfaces: LoyaltySystemManager)

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	storage "github.com/Schalure/gofermart/internal/storage"
	gomock "github.com/golang/mock/gomock"
)

// MockLoyaltySystemManager is a mock of LoyaltySystemManager interface.
type MockLoyaltySystemManager struct {
	ctrl     *gomock.Controller
	recorder *MockLoyaltySystemManagerMockRecorder
}

// MockLoyaltySystemManagerMockRecorder is the mock recorder for MockLoyaltySystemManager.
type MockLoyaltySystemManagerMockRecorder struct {
	mock *MockLoyaltySystemManager
}

// NewMockLoyaltySystemManager creates a new mock instance.
func NewMockLoyaltySystemManager(ctrl *gomock.Controller) *MockLoyaltySystemManager {
	mock := &MockLoyaltySystemManager{ctrl: ctrl}
	mock.recorder = &MockLoyaltySystemManagerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockLoyaltySystemManager) EXPECT() *MockLoyaltySystemManagerMockRecorder {
	return m.recorder
}

// GetWithdraws mocks base method.
func (m *MockLoyaltySystemManager) GetWithdraws(arg0 context.Context, arg1 string) ([]storage.Order, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWithdraws", arg0, arg1)
	ret0, _ := ret[0].([]storage.Order)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWithdraws indicates an expected call of GetWithdraws.
func (mr *MockLoyaltySystemManagerMockRecorder) GetWithdraws(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWithdraws", reflect.TypeOf((*MockLoyaltySystemManager)(nil).GetWithdraws), arg0, arg1)
}

// Withdraw mocks base method.
func (m *MockLoyaltySystemManager) Withdraw(arg0 context.Context, arg1, arg2 string, arg3 int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Withdraw", arg0, arg1, arg2, arg3)
	ret0, _ := ret[0].(error)
	return ret0
}

// Withdraw indicates an expected call of Withdraw.
func (mr *MockLoyaltySystemManagerMockRecorder) Withdraw(arg0, arg1, arg2, arg3 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Withdraw", reflect.TypeOf((*MockLoyaltySystemManager)(nil).Withdraw), arg0, arg1, arg2, arg3)
}
