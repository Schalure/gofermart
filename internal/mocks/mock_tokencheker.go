// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/Schalure/gofermart/internal/server (interfaces: TokenCheker)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTokenCheker is a mock of TokenCheker interface.
type MockTokenCheker struct {
	ctrl     *gomock.Controller
	recorder *MockTokenChekerMockRecorder
}

// MockTokenChekerMockRecorder is the mock recorder for MockTokenCheker.
type MockTokenChekerMockRecorder struct {
	mock *MockTokenCheker
}

// NewMockTokenCheker creates a new mock instance.
func NewMockTokenCheker(ctrl *gomock.Controller) *MockTokenCheker {
	mock := &MockTokenCheker{ctrl: ctrl}
	mock.recorder = &MockTokenChekerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTokenCheker) EXPECT() *MockTokenChekerMockRecorder {
	return m.recorder
}

// CheckValidJWT mocks base method.
func (m *MockTokenCheker) CheckValidJWT(arg0 string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckValidJWT", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CheckValidJWT indicates an expected call of CheckValidJWT.
func (mr *MockTokenChekerMockRecorder) CheckValidJWT(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckValidJWT", reflect.TypeOf((*MockTokenCheker)(nil).CheckValidJWT), arg0)
}
